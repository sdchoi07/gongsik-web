#server: #서버포트설정
#     port: 8080
spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
       group-id: chatting
       key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
       value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
       auto-offset-reset: latest
       properties:
        spring.json.trusted.packages: com.gongsik.gsw.util.message.dto
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      missing-topics-fatal: false
        
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/gsw?serverTimezone=Asia/Seoul
#    username: ${DB_USERANME}
#    password: ${DB_PASSWORD} 
    
  data:
   redis:
    host: redis  # Redis 호스트
    port: 6379
    
  mail:
    host: smtp.gmail.com
    port: 587
    username: ENC(Nkv5QFueSxMcZsAeaUAxXKneME/UWkmdFOzyVzfHrF+Z9w0Fb/YbJA==)
    password: ENC(Eda09Vv5i+4tUhjTB6bwracKFXfzJBxymq7r5QIc+/1jIhdQ59i5VA==)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

#sms 문자인증
coolsms:
 api:
  key : ENC(r9lTtdcM3yBke2cxM6NbQHJFKlxxOx8HDHZ86OHPlHOIkyMqNx+P4w==)
  secret : ENC(ERpQ8ZYgscsUJnAtvsGJpcnisdSg4g3b7lT/cCbSqBY95ryLoglA4G+Hx2wx57nNmDbWyT/BLfU=)
  sender : ENC(ARsSFNmLSjsYdLisd16y6uUAnvEm1z9do/1j+jl6iGI=)	
  
