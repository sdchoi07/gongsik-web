version: '2'
services:
## mySql
  mysql:
    image: 'mysql:8.0.35'
    environment:
      - 'MYSQL_DATABASE=gsw'
      - 'MYSQL_ROOT_PASSWORD=gongsik1204'
    command: --lower_case_table_names=1
    ports:
      - '3306:3306'
    networks:
      - gongsik
## redis
  redis:
    container_name: gongsik-redis
    image: redis:latest  # 레디스 이미지
    ports:
      - '6379:6379'
    networks: 
     - gongsik
## nginx
  nginx:
    container_name: gongsik-nginx
    image: nginx:latest
    ports:
      - '80:80'
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - gongsik
## zookeeper      
  zookeeper:
    image: zookeeper:3.8.3
    ports:
      - "2181:2181"
## kafka
  kafka:
    image: confluentinc/cp-kafka:7.0.0
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      
##kafak-ui
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9100:8080  # 호스트의 9090 포트를 컨테이너의 8080 포트로 매핑
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: wizard_test
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
## application
  application:
    build:              ## 빌드
      context: .        ## 빌드할 경로
    ports:
      - 81:8080
    container_name: gsw-backend  ## 컨테이너 이름
    restart: always               ## 매번 프로젝트를 다시 실행한다. 
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/gsw?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: gongsik1204
      spring.profiles.active: local                ## 스프링 active profile 설정
    depends_on:                   ## mysql 컨테이너가 올라온 뒤에 이 컨테이너가 올라올 수 있도록 한다.
      - mysql
      - redis
      - nginx
    networks:
      - gongsik
      
networks:
  gongsik:
  